# -*- coding: utf-8 -*-
import numpy as np


def combination(n: int, k: int):
    return np.math.factorial(n)/np.math.factorial(k)/np.math.factorial(n - k)

# %% 1
# Вероятность того, что стрелок попадет в мишень, выстрелив один раз,
# равна 0.8. Стрелок выстрелил 100 раз. Найдите вероятность того,
# что стрелок попадет в цель ровно 85 раз.
p = 0.8
n = 100
m = 85
print(f"1. Pn(m) = {combination(n, m) * p ** m * (1 - p) ** (n - m):.3f}")

# %% 2
# Вероятность того, что лампочка перегорит в течение первого дня эксплуатации,
# равна 0.0004. В жилом комплексе после ремонта в один день включили 5000
# новых лампочек. Какова вероятность, что ни одна из них не перегорит в
# первый день? Какова вероятность, что перегорят ровно две?

p = 0.0004  # перегорит
q = 1 - p  # не перегорит
n = 5000
print(f"2. Ни одна не перегорит P = {q ** n:.3}f")
print(f"2. Перегорят две P = {n * (n - 1) / 2 * p ** 2 * q ** (n - 2):.3f}")

# %% 3
# Монету подбросили 144 раза.
# Какова вероятность, что орел выпадет ровно 70 раз?

n = 144
m = 70
print(f"Pn(m) = {combination(n, m) * 0.5 ** m * 0.5 ** (n - m):.3f}")

# %% 4
# В первом ящике находится 10 мячей, из которых 7 - белые.
# Во втором ящике - 11 мячей, из которых 9 белых.
# Из каждого ящика вытаскивают случайным образом по два мяча.
# Какова вероятность того, что все мячи белые?
# Какова вероятность того, что ровно два мяча белые? Какова вероятность того,
# что хотя бы один мяч белый?

print(f"3. что все мячи белые:\
{combination(7, 2) / combination(10, 2) * combination(9, 2) / combination(11, 2):.3f}")
# Можно также по формуле вероятности произведения событий
print(f"3. что все мячи белые: {7/10 * 6/9 * 9/11 * 8/10 :.3f}")
# P32 = combination(7, 2) / combination(10, 2) * combination(2, 2) / combination(11, 2) +\
#     combination(3, 2) / combination(10, 2) * combination(9, 2) / combination(11, 2) +\
#         combination(7, 1) / combination(10, 2) * combination(9, 1) / combination(11, 2)
# print(f"3. что ровно два мяча белые: {P32:.3f}")









